import React, { useEffect, useState } from "react";
import axios from "axios";
import "./Trash.css"; // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å style ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ

const TrashPage = () => {
  const [deletedFiles, setDeletedFiles] = useState([]);
  const [loading, setLoading] = useState(true);
  const token = localStorage.getItem("userData")
    ? JSON.parse(localStorage.getItem("userData")).token
    : null;

  const fetchTrash = async () => {
    try {
      const res = await axios.get("http://localhost:3000/api/files/trash");
      setDeletedFiles(res.data);
    } catch (err) {
      console.error("Error fetching trash files:", err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchTrash();
  }, []);

  const handleRestore = async (id) => {
    try {
      await axios.put(`http://localhost:3000/api/files/restore/${id}`);
      setDeletedFiles((prev) => prev.filter((doc) => doc.id !== id));
    } catch (err) {
      console.error("Error restoring file:", err);
    }
  };

  const handlePermanentDelete = async (id) => {
    const confirm = window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£?");
    if (!confirm) return;

    try {
      await axios.delete(`http://localhost:3000/api/files/permanent-delete/${id}`);
      setDeletedFiles((prev) => prev.filter((doc) => doc.id !== id));
    } catch (err) {
      console.error("Error permanently deleting file:", err);
    }
  };

  return (
    <div className="trash-container">
      <h1>‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h1>
      {loading ? (
        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
      ) : deletedFiles.length === 0 ? (
        <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏ô‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞</p>
      ) : (
        <table className="trash-table">
          <thead>
            <tr>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</th>
              <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
              <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á</th>
              <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô</th>
              <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏ö</th>
              <th>‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {deletedFiles.map((doc) => (
              <tr key={doc.id}>
                <td>{doc.name}</td>
                <td>{doc.type}</td>
                <td>{doc.date}</td>
                <td>{doc.department}</td>
                <td>{new Date(doc.deleted_at).toLocaleString("th-TH")}</td>
                <td>
                  <button className="btn-restore" onClick={() => handleRestore(doc.id)}>
                    ‚ôªÔ∏è ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô
                  </button>
                  <button className="btn-delete" onClick={() => handlePermanentDelete(doc.id)}>
                    üóëÔ∏è ‡∏•‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
};

export default TrashPage;
